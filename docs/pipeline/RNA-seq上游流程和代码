
# 1 前期准备
## 1.1 环境搭建
```sh
conda creat -n rnaseq
conda activate rna
# 软件下载
mamba install -y fastqc multiqc trim-galore hisat2 subread salmon samtools

```
## 1.2 数据下载
### 1.2.1 参考基因组文件
- 小鼠(https://www.gencodegenes.org/mouse/releases.html)
- 人类(https://www.gencodegenes.org/human/releases.html)
上面是官网，一般需要的是基因组文件（fq）和注释文件（GTF）
```text
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M34/gencode.vM34.transcripts.fa.gz
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_45/gencode.v45.transcripts.fa.gz
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M34/gencode.vM34.annotation.gtf.gz
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M34/GRCm39.genome.fa.gz
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_45/gencode.v45.annotation.gtf.gz
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_45/GRCh38.p14.genome.fa.gz
```
把以上内容写入到一个url.txt文件然后下载就行
```sh
mkdir -p $HOME/ref
cd $HOME/ref
$cat << EOF >> url.txt
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M34/gencode.vM34.transcripts.fa.gz
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_45/gencode.v45.transcripts.fa.gz
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M34/gencode.vM34.annotation.gtf.gz
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M34/GRCm39.genome.fa.gz
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_45/gencode.v45.annotation.gtf.gz
https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_45/GRCh38.p14.genome.fa.gz
> EOF
```

```sh
cd $HOME/ref 
wget -c -i url.txt  
ls *gz |xargs gunzip
```

查看一下
```sh
ls -lh |cut -d" " -f 5-
```

应该是这样的文件
```sh
(rnaseq) yanghc@mgmt01 ~/ref
$ls -lh | cut -d " " -f 5-

1.5G Jan 11 21:28 gencode.v45.annotation.gtf
862M Jan 11 21:33 gencode.vM34.annotation.gtf
3.2G Jan 11 21:27 GRCh38.p14.genome.fa
2.6G Jan 11 21:31 GRCm39.genome.fa
```


## 1.3 索引构建
### 1.3.1 hisat2对**基因组**fasta序列文件构建索引
hisat2工具里面有一个命令是 hisat2-build  ，只需要指定基因组fasta序列文件，以及构建好的索引系列文件的前缀即可：

```sh
conda activate rna

hisat2-build -p 8 ~/ref/GRCh38.p14.genome.fa ~/ref/ht2_index_GRCh38.p14
hisat2-build -p 8 ~/ref/GRCm39.genome.fa ~/ref/ht2_index_GRCm39


```
**记住，这个构建好的索引系列文件的前缀非常重要的，后续的hisat2比对，实际上就需要这个前缀。文件大小如下所示：**

### 1.3.2 salmon对**转录组**fasta文件构建索引
因为salmon和上面的hisat2是同一个团队开发的软件，所以使用起来非常类似。它需要的是转录组的fastq序列文件，而不是参考基因组哦。

```sh
nohup salmon index -t gencode.v45.transcripts.fa   -i   salmon_index_v45 & 
nohup salmon index -t gencode.vM34.transcripts.fa   -i    salmon_index_vM34 & 
```


# 2 质控

## 2.1 使用fastqc对原始数据进行质控

```sh
# 激活 rnaseq 环境
conda activate rnaseq
# 进入目标目录
cd /home/sunlab/workspace/test/mhw/raw_data
# 检查上级目录是否存在 FASTQ 文件夹
if [ -d "../FASTQ" ]; then
else
    mkdir -p ../FASTQ
fi
# 运行 fastqc 命令
fastqc -q -t 32 -o ../FASTQ/ *.fq.gz
```

## 2.2 使用multiqc合并qc结果
```sh
cd ~/workspace/test/mhw/raw_data/FASTQ
nohup multiqc ./*.zip -o ./ >./multiqc.log &
```


## 2.3 过滤
```sh
#!/bin/bash

# 设置输出目录
output_dir="./trimmed_fastq"

# 创建输出目录（如果不存在）
mkdir -p "$output_dir"

# 遍历文件列表
for file in *_R1.fq.gz; do
    # 提取样本名称
    sample_name="${file%%_R1.fq.gz}"

    # 检查R2文件是否存在
    if [ -e "${sample_name}_R2.fq.gz" ]; then
        # 运行 trim_galore 命令
        nohup trim_galore -q 25 --phred33 --length 36 --stringency 3 --paired -o "$output_dir" "${sample_name}_R1.fq.gz" "${sample_name}_R2.fq.gz" &
    else
        echo "警告：样本 ${sample_name} 的R2文件不存在，无法进行双端处理。"
    fi
done
```

## 2.4 对过滤完后的数据进行质控

```sh
nohup fastqc -t 12 -o ./ *val* > qc_trimmed.log &
nohup multiqc *.zip -o ./ > ./multiqc_t.log &
```

# 3 hisat2比对
```sh
ls *fq.gz|while read id;do  
gtf='$HOME/reference/GRCh38p14.gtf'  
hisat_index="$HOME/reference/hisat2_index/${id}.x.gz" # 这里需要的是建立好的8个文件的前缀，即.x.gz前面的的部分 
nohup sh -c " hisat2 -p 8 -x ${hisat_index} -1 ${id}_1_val.fq.gz -2 ${id}_2_val.fq.gz 2>${id%%_*}.log | samtools sort -@ 2 -o ${id%%.*}.bam " &  
done
```

# 4 定量
```sh
gtf=$HOME/reference/GRCh38p14.gtf 
# 根据id定量
nohup featureCounts -T 5 -p -t exon -g gene_id -a $gtf \
-o all.id.txt *bam 1>counts.id.log 2>&1 &
# 根据name定量
nohup featureCounts -T 5 -p -t exon -g gene_name  -a $gtf \
-o  all.name.txt  */*.bam  1>counts.name.log 2>&1 & 
```
得到的all.id.txt就是所有需要的定量文件了
